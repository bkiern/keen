/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface KeenDrawer {
        "heading": string;
        "isopen": boolean;
        "open": () => Promise<void>;
    }
    interface KeenSpinner {
    }
    interface KeenStepper {
        "active": number;
        "steps": number;
    }
    interface KeenStockFinder {
    }
    interface KeenStockPrice {
        "stockSymbol": string;
    }
}
export interface KeenStepperCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLKeenStepperElement;
}
export interface KeenStockFinderCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLKeenStockFinderElement;
}
declare global {
    interface HTMLKeenDrawerElement extends Components.KeenDrawer, HTMLStencilElement {
    }
    var HTMLKeenDrawerElement: {
        prototype: HTMLKeenDrawerElement;
        new (): HTMLKeenDrawerElement;
    };
    interface HTMLKeenSpinnerElement extends Components.KeenSpinner, HTMLStencilElement {
    }
    var HTMLKeenSpinnerElement: {
        prototype: HTMLKeenSpinnerElement;
        new (): HTMLKeenSpinnerElement;
    };
    interface HTMLKeenStepperElement extends Components.KeenStepper, HTMLStencilElement {
    }
    var HTMLKeenStepperElement: {
        prototype: HTMLKeenStepperElement;
        new (): HTMLKeenStepperElement;
    };
    interface HTMLKeenStockFinderElement extends Components.KeenStockFinder, HTMLStencilElement {
    }
    var HTMLKeenStockFinderElement: {
        prototype: HTMLKeenStockFinderElement;
        new (): HTMLKeenStockFinderElement;
    };
    interface HTMLKeenStockPriceElement extends Components.KeenStockPrice, HTMLStencilElement {
    }
    var HTMLKeenStockPriceElement: {
        prototype: HTMLKeenStockPriceElement;
        new (): HTMLKeenStockPriceElement;
    };
    interface HTMLElementTagNameMap {
        "keen-drawer": HTMLKeenDrawerElement;
        "keen-spinner": HTMLKeenSpinnerElement;
        "keen-stepper": HTMLKeenStepperElement;
        "keen-stock-finder": HTMLKeenStockFinderElement;
        "keen-stock-price": HTMLKeenStockPriceElement;
    }
}
declare namespace LocalJSX {
    interface KeenDrawer {
        "heading"?: string;
        "isopen"?: boolean;
    }
    interface KeenSpinner {
    }
    interface KeenStepper {
        "active"?: number;
        "onKeenStepChange"?: (event: KeenStepperCustomEvent<number>) => void;
        "steps"?: number;
    }
    interface KeenStockFinder {
        "onKeenSymbolSelected"?: (event: KeenStockFinderCustomEvent<string>) => void;
    }
    interface KeenStockPrice {
        "stockSymbol"?: string;
    }
    interface IntrinsicElements {
        "keen-drawer": KeenDrawer;
        "keen-spinner": KeenSpinner;
        "keen-stepper": KeenStepper;
        "keen-stock-finder": KeenStockFinder;
        "keen-stock-price": KeenStockPrice;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "keen-drawer": LocalJSX.KeenDrawer & JSXBase.HTMLAttributes<HTMLKeenDrawerElement>;
            "keen-spinner": LocalJSX.KeenSpinner & JSXBase.HTMLAttributes<HTMLKeenSpinnerElement>;
            "keen-stepper": LocalJSX.KeenStepper & JSXBase.HTMLAttributes<HTMLKeenStepperElement>;
            "keen-stock-finder": LocalJSX.KeenStockFinder & JSXBase.HTMLAttributes<HTMLKeenStockFinderElement>;
            "keen-stock-price": LocalJSX.KeenStockPrice & JSXBase.HTMLAttributes<HTMLKeenStockPriceElement>;
        }
    }
}
